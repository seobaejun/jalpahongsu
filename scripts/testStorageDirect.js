const { initializeApp } = require('firebase/app')
const { getStorage, ref, uploadBytes, getDownloadURL } = require('firebase/storage')

// Firebase ÏÑ§Ï†ï
const firebaseConfig = {
  apiKey: "AIzaSyBozZHNiZa7m_MznFzzcj-xRxf2J7bjeOo",
  authDomain: "hongsu-9d9c2.firebaseapp.com",
  projectId: "hongsu-9d9c2",
  storageBucket: "hongsu-9d9c2.firebasestorage.app",
  messagingSenderId: "102045054206",
  appId: "1:102045054206:web:1f060f9e06af0b7e6fe1af",
  measurementId: "G-2SDG086GFP"
}

// Firebase Ï¥àÍ∏∞Ìôî
const app = initializeApp(firebaseConfig)
const storage = getStorage(app)

async function testStorageDirect() {
  try {
    console.log('Firebase Storage ÏßÅÏ†ë ÌÖåÏä§Ìä∏ ÏãúÏûë...')
    
    // ÌÖåÏä§Ìä∏ Ïù¥ÎØ∏ÏßÄ Îç∞Ïù¥ÌÑ∞ ÏÉùÏÑ± (1x1 PNG)
    const pngData = Buffer.from([
      0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, // PNG ÏãúÍ∑∏ÎãàÏ≤ò
      0x00, 0x00, 0x00, 0x0D, 0x49, 0x48, 0x44, 0x52, // IHDR Ï≤≠ÌÅ¨
      0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, // 1x1 ÌîΩÏÖÄ
      0x08, 0x02, 0x00, 0x00, 0x00, 0x90, 0x77, 0x53, 0xDE, // IHDR Îç∞Ïù¥ÌÑ∞
      0x00, 0x00, 0x00, 0x0A, 0x49, 0x44, 0x41, 0x54, // IDAT Ï≤≠ÌÅ¨
      0x08, 0x99, 0x01, 0x01, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x02, 0x00, 0x01,
      0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4E, 0x44, 0xAE, 0x42, 0x60, 0x82 // IEND Ï≤≠ÌÅ¨
    ])
    
    const timestamp = Date.now()
    const fileName = `test_${timestamp}.png`
    const storagePath = `images/${fileName}`
    
    console.log('Storage Í≤ΩÎ°ú:', storagePath)
    console.log('ÌååÏùº ÌÅ¨Í∏∞:', pngData.length, 'bytes')
    
    // StorageÏóê ÏóÖÎ°úÎìú
    const storageRef = ref(storage, storagePath)
    console.log('ÏóÖÎ°úÎìú ÏãúÏûë...')
    
    const snapshot = await uploadBytes(storageRef, pngData)
    console.log('‚úÖ ÏóÖÎ°úÎìú ÏÑ±Í≥µ!')
    console.log('ÌååÏùºÎ™Ö:', snapshot.metadata.name)
    console.log('ÌÅ¨Í∏∞:', snapshot.metadata.size)
    console.log('ÌÉÄÏûÖ:', snapshot.metadata.contentType)
    
    // Îã§Ïö¥Î°úÎìú URL Í∞ÄÏ†∏Ïò§Í∏∞
    const downloadURL = await getDownloadURL(snapshot.ref)
    console.log('Îã§Ïö¥Î°úÎìú URL:', downloadURL)
    
    console.log('‚úÖ Firebase Storage ÌÖåÏä§Ìä∏ ÏÑ±Í≥µ!')
    console.log('üí° Ïù¥Ï†ú Ïõπ Ïï†ÌîåÎ¶¨ÏºÄÏù¥ÏÖòÏóêÏÑú Ïù¥ÎØ∏ÏßÄ ÏóÖÎ°úÎìúÍ∞Ä ÏûëÎèôÌï¥Ïïº Ìï©ÎãàÎã§.')
    
  } catch (error) {
    console.error('‚ùå Firebase Storage ÌÖåÏä§Ìä∏ Ïã§Ìå®:', error)
    console.error('Ïò§Î•ò ÏΩîÎìú:', error.code)
    console.error('Ïò§Î•ò Î©îÏãúÏßÄ:', error.message)
    
    if (error.code === 'storage/unauthorized') {
      console.log('üí° Ìï¥Í≤∞ Î∞©Î≤ï: Firebase ConsoleÏóêÏÑú Storage Í∑úÏπôÏùÑ ÏàòÏ†ïÌïòÏÑ∏Ïöî')
      console.log('   1. Firebase Console (https://console.firebase.google.com) Ï†ëÏÜç')
      console.log('   2. ÌîÑÎ°úÏ†ùÌä∏ ÏÑ†ÌÉù: hongsu-9d9c2')
      console.log('   3. Storage > Rules ÌÉ≠ ÌÅ¥Î¶≠')
      console.log('   4. Îã§Ïùå Í∑úÏπôÏúºÎ°ú Î≥ÄÍ≤Ω:')
      console.log('   rules_version = "2";')
      console.log('   service firebase.storage {')
      console.log('     match /b/{bucket}/o {')
      console.log('       match /{allPaths=**} {')
      console.log('         allow read, write: if true;')
      console.log('       }')
      console.log('     }')
      console.log('   }')
      console.log('   5. "Publish" Î≤ÑÌäº ÌÅ¥Î¶≠')
    }
  }
}

testStorageDirect()
